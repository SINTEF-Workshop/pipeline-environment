version: '3.8'

services:
  app:
    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile
      args:
        # Update 'VARIANT' to pick a version of Python: 3, 3.10, 3.9, 3.8, 3.7, 3.6
        # Append -bullseye or -buster to pin to an OS version.
        # Use -bullseye variants on local arm64/Apple Silicon.
        VARIANT: 3.10-bullseye
        # Optional Node.js version to install
        NODE_VERSION: "lts/*"

    volumes:
      - ..:/workspace:cached  

    # Overrides default command so things don't shut down after the process ends.
    command: sleep infinity

    # Runs app on the same network as the database container, allows "forwardPorts" in devcontainer.json function.
    network_mode: service:db

    # Uncomment the next line to use a non-root user for all processes.
    # user: vscode

    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)
    # Runs app on the same network as the database container, allows "forwardPorts" in devcontainer.json function.

    # Uncomment the next line to use a non-root user for all processes.
    # user: vscode

  # NOTE: This setup does does not work

  # s3:
  #   image: quay.io/minio/minio:RELEASE.2022-06-10T16-59-15Z
  #   restart: always
  #   # expose is used to not publish port to the host machine, so nginx can be used to forward the port
  #   expose:
  #     - 9000
  #     - 9001
  #   volumes:
  #     - minio-data:/data
  #   environment:
  #     MINIO_ROOT_USER: minioadmin
  #     MINIO_ROOT_PASSWORD: minioadmin
  #   command: server ./data --address 0.0.0.0:9000 --console-address ":9001"
  #   healthcheck:
  #       test: ["CMD", "curl", "-f", "http://127.0.0.1:9000/minio/health/live"]
  #       interval: 30s
  #       timeout: 20s
  #       retries: 3
  
  # nginx:
  #   image: nginx:1.19.2-alpine
  #   hostname: nginx
  #   # network_mode: service:s3 # run nginx in the same network as s3
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #   ports:
  #     - 9000:9000
  #     - 9001:9001
  #   depends_on:
  #     - s3


  db:
    image: postgis/postgis
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST: postgres

volumes:
  dagster-postgres:
    driver: local
  postgres-data:
